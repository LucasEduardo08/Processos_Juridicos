services:
  backend:
    build: ./backend
    container_name: api-proju
    ports:
      - "3035:3035"
    depends_on:
      postgres:
        condition: service_healthy

    volumes:
      - ./backend:/app
      - ./backend/node_modules:/app/node_modules 
      # - /app/node_modules 
    env_file:
      - ./backend/.env

  frontend:
    build: ./frontend
    container_name: front-proju
    ports:
      - "3060:3060"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true  
    # volumes:
    #   - ./frontend:/app
    #   - ./frontend/node_modules:/app/node_modules 
    # command: npm start

    depends_on:
      - backend

  postgres:
    image: postgres:17
    container_name: db-proju
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: proJu
    ports:
      - "5941:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20


volumes:
  pgdata: